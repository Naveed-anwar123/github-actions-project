name: node app workflow
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - feature/*
env: # these are setup at the environment in the runner
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }} # access repository level variables
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }} # access repository level secrets
jobs:
  unit-testing:
    strategy:
      matrix:
        nodejs_version: [18,20]
        operating_system: [ubuntu-latest, macos-latest]
        exclude:
          - nodejs_version: 18
            operating_system: macos-latest
    runs-on: ${{ matrix.operating_system }}
    name: unit-testing
    steps:
      - name: Repository Checkout # download repo
        uses: actions/checkout@v4 

      - name: Setup Node
        uses: actions/setup-node@v4 # install node
        with:
          node-version: ${{ matrix.nodejs_version }}

      - name: Install dependencies # install dependecies
        run: npm install

      - name: Run Tests # run the unit tests
        id: nodejs_unit_test_id # give a unique id 
        run: |
          npm test
          ls -ltrh

      - name: Archive test result for ${{ matrix.operating_system }}-${{ strategy.job-index }}
        if: failure() && (steps.nodejs_unit_test_id.outcome == 'failure' || steps.nodejs_unit_test_id.outcome == 'success')
        uses: actions/upload-artifact@v4
        with:
          name: Result-${{ matrix.operating_system }}-${{ strategy.job-index }} # to generate random names
          path: test-results.xml # where the file is present on the runner vm

  code-coverage: 
    strategy:
      matrix:
        nodejs_version: [18]
        operating_system: [ubuntu-latest]
    runs-on: ${{ matrix.operating_system }}
    name: unit-testing 
    steps:
      - name: Repository Checkout # download repo
        uses: actions/checkout@v4 
      - name: Setup Node 18
        uses: actions/setup-node@v4 # install node
        with:
          node-version: 18
      - name: Install dependencies # install dependecies
        run: npm install
      - name: Run Coverage # run the unit tests
        run: npm run coverage
        continue-on-error: true
      - name: Code Coverage Results
        uses: actions/upload-artifact@v4
        with:
          name: Code-Coverage-${{ matrix.operating_system }}-${{ strategy.job-index }} # to generate random names
          path: coverage # where the file is present on the runner vm
          retention-days: 5 